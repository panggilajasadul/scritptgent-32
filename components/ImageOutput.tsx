import React from 'react';
import { EditedImageOutput } from '../types';
import Button from './ui/Button';
import { DownloadIcon } from './icons/DownloadIcon';
import { useToast } from '../hooks/useToast';
import { motion } from 'framer-motion';

interface ImageOutputProps {
  output: EditedImageOutput;
}

const ImageOutput: React.FC<ImageOutputProps> = ({ output }) => {
  const { addToast } = useToast();

  const handleDownload = () => {
    if (!output.image) return;
    const link = document.createElement('a');
    link.href = `data:${output.image.mimeType};base64,${output.image.data}`;
    link.download = `scriptgen-edited-image-${Date.now()}.png`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    addToast('Gambar berhasil diunduh!');
  };

  return (
    <motion.div
        className="space-y-4"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
    >
      {output.image && (
          <div className="bg-secondary p-2 rounded-custom">
            <img
              src={`data:${output.image.mimeType};base64,${output.image.data}`}
              alt="Generated by AI"
              className="w-full rounded-md"
            />
          </div>
      )}

      {output.text && (
          <div className="bg-secondary p-4 rounded-custom text-sm text-text-secondary">
              <p className="font-semibold text-text-primary mb-1">Catatan dari AI:</p>
              <p>{output.text}</p>
          </div>
      )}

      {output.image && (
          <div className="flex flex-wrap gap-2">
              <Button onClick={handleDownload} variant="secondary">
                  <DownloadIcon /> Download Gambar
              </Button>
          </div>
      )}
    </motion.div>
  );
};

export default ImageOutput;